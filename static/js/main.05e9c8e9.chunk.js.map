{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","completed","title","id","classNames","TodoList","todos","map","username","serverTodos","userId","usersFromServer","find","App","useState","setTitle","selectedUser","setSelectedUser","setTodos","showErrorMessage","setShowErrorMessage","addTodo","array","userName","foundUser","newTodo","Math","max","titleErrorCondition","userErrorCondition","action","method","onSubmit","event","preventDefault","htmlFor","type","placeholder","value","onChange","target","disabled","selected","ReactDOM","render","document","getElementById"],"mappings":"8RAOaA,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClCC,EAAgBD,EAAhBC,MAAOC,EAASF,EAATE,KAEf,OACE,mCACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGC,OCJIG,G,MAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCC,EAIED,EAJFC,UACAC,EAGEF,EAHFE,MACAR,EAEEM,EAFFN,KACAS,EACEH,EADFG,GAGF,OACE,0BACE,UAASA,EACTN,UAAWO,IACT,WACA,CACE,sBAAuBH,IAL7B,UASE,oBAAIJ,UAAU,kBAAd,SAAiCK,IAEhCR,GACC,cAAC,EAAD,CAAUA,KAAMA,SCvBXW,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,yBAAST,UAAU,WAAnB,SACGS,EAAMC,KAAI,SAAAP,GAAI,OAAI,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKG,UCTxC,GACb,CACEA,GAAI,EACJP,KAAM,gBACNY,SAAU,OACVb,MAAO,qBAET,CACEQ,GAAI,EACJP,KAAM,eACNY,SAAU,YACVb,MAAO,qBAET,CACEQ,GAAI,EACJP,KAAM,mBACNY,SAAU,WACVb,MAAO,sBAET,CACEQ,GAAI,EACJP,KAAM,mBACNY,SAAU,WACVb,MAAO,6BAET,CACEQ,GAAI,EACJP,KAAM,mBACNY,SAAU,SACVb,MAAO,4BAET,CACEQ,GAAI,EACJP,KAAM,uBACNY,SAAU,mBACVb,MAAO,2BAET,CACEQ,GAAI,EACJP,KAAM,kBACNY,SAAU,eACVb,MAAO,0BAET,CACEQ,GAAI,EACJP,KAAM,2BACNY,SAAU,gBACVb,MAAO,wBAET,CACEQ,GAAI,EACJP,KAAM,kBACNY,SAAU,WACVb,MAAO,2BAET,CACEQ,GAAI,GACJP,KAAM,qBACNY,SAAU,iBACVb,MAAO,2BCtCJ,IAAMc,ECrBE,CACb,CACEN,GAAI,EACJD,MAAO,qBACPD,WAAW,EACXS,OAAQ,GAEV,CACEP,GAAI,GACJD,MAAO,kBACPD,WAAW,EACXS,OAAQ,GAEV,CACEP,GAAI,EACJD,MAAO,qCACPD,WAAW,EACXS,OAAQ,IDIuCH,KAAI,SAAAP,GAAI,kCACtDA,GADsD,IAEzDN,MAdegB,EAcDV,EAAKU,OAbDC,EAAgBC,MAAK,SAAAlB,GAAI,OAAIA,EAAKS,KAAOO,MAEvC,QAHtB,IAAiBA,KAiBJG,EAAM,WACjB,MAA0BC,mBAAS,IAAnC,mBAAOZ,EAAP,KAAca,EAAd,KACA,EAAwCD,mBAAS,IAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAA0BH,mBAASL,GAAnC,mBAAOH,EAAP,KAAcY,EAAd,KACA,EAAgDJ,oBAAS,GAAzD,mBAAOK,EAAP,KAAyBC,EAAzB,KAQMC,EAAU,SAACC,GACf,IAxBmBC,EAwBbC,GAxBaD,EAwBaP,EAvBhBL,EAAgBC,MAAK,gBAAGhB,EAAH,EAAGA,KAAH,OAAc2B,IAAa3B,MAE9C,MAuBlB,GAAI4B,EAAW,CACb,IAAMC,EAAgB,CACpBtB,GAVJuB,KAAKC,IAAL,MAAAD,KAAI,YACCpB,EAAMC,KAAI,SAAAP,GAAI,OAAIA,EAAKG,QACxB,EASAO,OAAQc,EAAUrB,GAClBD,QACAD,WAAW,EACXP,KAAM8B,GAGRN,EAAS,GAAD,mBAAKI,GAAL,CAAYG,OA+BlBG,GAAuB1B,GAASiB,EAChCU,GAAsBb,GAAgBG,EAE5C,OACE,sBAAKtB,UAAU,MAAf,UACE,+CAEA,uBACEiC,OAAO,aACPC,OAAO,OACPC,SAvBe,SAACC,GACpBA,EAAMC,iBAEDhC,GAAUc,GAMfK,EAAQf,GAtBRW,EAAgB,IAChBF,EAAS,IACTK,GAAoB,IAelBA,GAAoB,IAgBpB,UAKE,sBAAKvB,UAAU,QAAf,UACE,uBAAOsC,QAAQ,QAAf,qBACA,uBACEhC,GAAG,QACHiC,KAAK,OACL,UAAQ,aACRC,YAAY,gBACZC,MAAOpC,EACPqC,SArCgB,SAACN,GACzBlB,EAASkB,EAAMO,OAAOF,UAsCfV,GACC,sBAAM/B,UAAU,QAAhB,qCAIJ,sBAAKA,UAAU,QAAf,UACE,uBAAOsC,QAAQ,OAAf,oBACA,yBACEhC,GAAG,OACH,UAAQ,aACRmC,MAAOtB,EACPuB,SAtDe,SAACN,GACxBhB,EAAgBgB,EAAMO,OAAOF,QAiDvB,UAME,wBAAQA,MAAM,GAAGG,UAAQ,EAACC,UAAQ,EAAlC,2BAEC/B,EAAgBJ,KAAI,SAACb,GAAD,OACnB,wBAAQ4C,MAAO5C,EAAKE,KAApB,SACGF,EAAKE,MADuBF,EAAKS,UAMvC0B,GACC,sBAAMhC,UAAU,QAAhB,qCAIJ,wBAAQuC,KAAK,SAAS,UAAQ,eAA9B,oBAIF,cAAC,EAAD,CAAU9B,MAAOA,QEnIvBqC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.05e9c8e9.chunk.js","sourcesContent":["import { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <>\n      <a className=\"UserInfo\" href={`mailto:${email}`}>\n        {name}\n      </a>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    completed,\n    title,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => <TodoInfo todo={todo} key={todo.id} />)}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nfunction getUserByName(userName: string) {\n  const foundUser = usersFromServer.find(({ name }) => userName === name);\n\n  return foundUser || null;\n}\n\nexport const serverTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState('');\n  const [todos, setTodos] = useState(serverTodos);\n  const [showErrorMessage, setShowErrorMessage] = useState(false);\n\n  const getNewId = () => (\n    Math.max(\n      ...todos.map(todo => todo.id),\n    ) + 1\n  );\n\n  const addTodo = (array: Todo[]) => {\n    const foundUser = getUserByName(selectedUser);\n\n    if (foundUser) {\n      const newTodo: Todo = {\n        id: getNewId(),\n        userId: foundUser.id,\n        title,\n        completed: false,\n        user: foundUser,\n      };\n\n      setTodos([...array, newTodo]);\n    }\n  };\n\n  const clearForm = () => {\n    setSelectedUser('');\n    setTitle('');\n    setShowErrorMessage(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(event.target.value);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title || !selectedUser) {\n      setShowErrorMessage(true);\n\n      return;\n    }\n\n    addTodo(todos);\n    clearForm();\n  };\n\n  const titleErrorCondition = !title && showErrorMessage;\n  const userErrorCondition = !selectedUser && showErrorMessage;\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          {titleErrorCondition && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n          <select\n            id=\"user\"\n            data-cy=\"userSelect\"\n            value={selectedUser}\n            onChange={handleUserChange}\n          >\n            <option value=\"\" disabled selected>Choose a user</option>\n\n            {usersFromServer.map((user) => (\n              <option value={user.name} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {userErrorCondition && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}